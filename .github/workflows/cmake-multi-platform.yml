# This workflow builds on Linux and creates a release for the GitHub repository.
name: Build and Release for Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Allows manual trigger for creating a release
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release]
        c_compiler: [gcc, clang]
        cpp_compiler: [g++, clang++]

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies on Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install -y qtbase5-dev qt6-base-dev libboost-all-dev libopenmpi-dev

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Package build output
      if: matrix.build_type == 'Release'
      run: |
        cd ${{ steps.strings.outputs.build-output-dir }}
        tar -czf project-release.tar.gz ./*

    - name: Upload artifact for release
      uses: actions/upload-artifact@v3
      with:
        name: project-release
        path: ${{ steps.strings.outputs.build-output-dir }}/project-release.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact from build
      uses: actions/download-artifact@v3
      with:
        name: project-release

    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: "Release ${{ github.ref }}"
        draft: false
        prerelease: false
        body: "Automated release for version ${{ github.ref }}."
        files: project-release.tar.gz
